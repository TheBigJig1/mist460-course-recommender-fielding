------- Connect to SQL server from vscode -------
⌘⇧P → MS SQL: Connect → Server localhost, Port 1433

Open Connection Dialogue:

Profile Name: Local SQL Server (Docker)
Connection Group: Local (or leave blank)
Server name: localhost,1433 (you can also just use localhost since port 1433 is default)
Trust server cert: Yes / True (container uses a self‑signed cert)
Authentication Type: SQL Login
Username: SA
Password: Str0ng#Pass2025
Database Name: (leave blank for default master, or specify once you create one, e.g. MyAppDB)
Encrypt: Yes / True (recommended; if connection fails, set Encrypt = True and Trust Server Cert = True)


----- I think obselete -----
neo4j
in browser: http://localhost:7474/browser/
Username: neo4j
Password: Str0ng#Pass2025

------- Setup for SQL Server in Docker -------
➜ docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Str0ng#Pass2025" \   
   -p 1433:1433 --name sql2022 \
   -d mcr.microsoft.com/mssql/server:2022-latest

➜ docker start sql2022

------- Setup for Python Env and FastAPI -------
python -m venv .venv
source .venv/bin/activate  
pip install uv
uv init
uv add fastapi
uv add uvicorn
uv add pyodbc
mkdir web_apis

cd web_apis
uvicorn course_recommender_apis:app --reload

------- Had to run -------
# unixODBC (provides libodbc.2.dylib)
brew update
brew install unixodbc

# Microsoft ODBC Driver 18 for SQL Server
brew tap microsoft/mssql-release https://github.com/Microsoft/homebrew-mssql-release
brew update
ACCEPT_EULA=Y brew install msodbcsql18 mssql-tools


------- To Run -------
# Start the SQL Server container
docker start sql2022
# Activate the Python virtual environment
source .venv/bin/activate
# Run the FastAPI application
uvicorn web_apis.course_recommender_apis:app --reload
